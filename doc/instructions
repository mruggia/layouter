#######################################
### setup for upboard test platform ###
#######################################

install ubuntu desktop 18.04 lts

install upboard kernerl
  https://github.com/up-board/up-community/wiki/Ubuntu_18.04

install remote desktop
  http://c-nergy.be/blog/?p=16817

install asl ros
  https://github.com/ethz-asl/mav_tools/wiki

install atom

enable ssh
  sudo apt install openssh-server
  sudo ufw allow ssh

install dynamixel sdk
  sudo apt-get install ros-melodic-dynamixel-sdk
  sudo usermod -a -G dialout $USER

give permission to access camera
  sudo usermod -a -G video $USER

clean compile
  cd catkin_ws
  catkin build marker --force-cmake --pre-clean

##################################
### usage instructions (ouzel) ###
##################################

start node_manager on base-station
connect base-station to ROS network
run "marker_ouzel_base_station.launch" on base-station trough node_manager
connect ouzel to ROS network
ssh into ouzel
run "marker_ouzel.launch" on ouzel trough command line (necessary to get python3 to work)
launch all base-station nodes in node_manager
on the ouzel control gui, click "init MSF" and set remote switch so that control mode reads "OFFBOARD"
launch rqt and open tab to set position setpoint
tick checkbox to publish setpoints and set z setpoint up ~0.2m (check that wrench target rises)
arm remote & increase throttle to 100% to take off
use marker/preplanner/move service call to move drone below plate (position set in ouzel_core.launch)
use marker/perplanner/touch_distance service call to move drone to touch ceiling (spring compression dist set in ouzel_core.launch)
use marker/planner/execute service call to execute a g-code file from the "marker/gcode" folder
